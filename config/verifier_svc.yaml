# YAML init file for Grip GraphQL framework
#

globals:
    project_home: $VFY_HOME
    service_module: vfy_services
    resolver_module: vfy_resolvers # Grip will generate this file if it does not exist
    handler_module: vfy_handlers
    debug_mode: True
    port: 5050
    logfile: grip.log
    

service_objects:
    # ensure that on the machine where this runs, 
    # there is a config file in ~/.aws containing a [finitestate] section
    secrets:
        class: SimpleAWSSecretService
        init_params:
            - name: aws_region
              value: us-east-1

            - name: profile
              value: finitestate
    
    s3:
      class: S3Service
      init_params:
          - name: aws_region
            value: us-east-1

          - name: profile
            value: finitestate

    postgres:
        class: PostgreSQLService
        init_params:
          - name: init_secret
            value: knowledgebase/stage/system_rw_static_creds

          - name: aws_region
            value: us-east-1

          - name: profile
            value: finitestate

    athena:
        class: AWSAthenaQueryService
        init_params:
            - name: aws_region
              value: us-east-1

            - name: aws_profile
              value: finitestate

            - name: database
              value: AwsDataCatalog

            - name: s3_bucket
              value: $ATHENA_DATA_BUCKET  
              #io.finitestate.codepipeline.dttest

            - name: bucket_path
              value: /tmp/athena/output

type_defs:
    Error:
        error_type: String!
        error_key: String!
        error_value: String! 

    Status:
        ok: Boolean!
        input_query: String!
        errors: '[Error]'
        

mutation_defs:
  mutx:
    output: String!


query_defs:
    helloathena:
        inputs:
          - observation_def_id: String!
          - input_query: String!

        output: Status!

    ping:
        output: String!


entry_point:
    graphql_get:
        route: /graphql
        method: GET
        handler: handle_get







